---
title: "**District Wide Model Analysis**"
author: "Ryan Budnik"
date: '`r format(Sys.time(), "%d %B, %Y")`'
output: 
  html_document:
    theme: darkly
    toc: true
    toc_float:
      collapsed: true
params:
  data:
    label: "Input dataset:"
    value: 18CC.csv
    input: select
    choices: [16CC.csv, 17CC.csv, 18CC.csv]
  exp:
    label: "Experiment:"
    value: C81A
    input: select
    choices: [C61A,	C61B,	C62A,	C62B,	C63A,	C63B, C71A,	C71B,	C72A,	C72B,	C73A,	C73B, C81A,	C81B,	C82A, C82B,	C83A,	C83B]
  year:
    label: "Year"
    value: 2018
    input: slider
    min: 2010
    max: 2030
    step: 1
    sep: ""
  district:
    label: "District:"
    value: Northern
    input: select
    choices: [Northern, Central, Southern]
  season:
    label: "Season Length:"
    value: Early
    input: select
    choices: [Early, Full]
---

```{r logo, cache=TRUE, echo=FALSE}
htmltools::img(src = knitr::image_uri(file.path("C:","Users","Ryan.Ryan-PC","Documents", "District.Analysis","inst","rmarkdown","templates","report","district","ICIA_logo.png")), 
               alt = 'logo',
               style = 'position:absolute; top:0; right:0; padding:10px;')
```

---

# Overview:
The following report renders a district-wide mixed model analysis with corresponding figures for the *`r params$year` `r params$district` District `r params$season`-season Test*, **`r params$exp`**.

```{r libs, include = FALSE}
library(rmarkdown)
library(knitr)
library(dplyr)
library(agricolae)
library(nlme)
library(lme4)
library(LMERConvenienceFunctions)
library(lmerTest)
library(randomcoloR)
library(car)
library(predictmeans)
library(shiny)
library(shinythemes)
library(psych)
library(emmeans)
```

- Corn Coversion Factor = **8.067**
- Bean Conversion Factor = **7.779**

```{r setup, echo = FALSE}
###Set wd & Import CSV Dataset:
df_cc<-read.csv(c(params$data),header=T,na.strings=c("", " ", "NA"))

CCF<-8.067
df_cc<-df_cc%>%mutate(yld = (wt*CCF))

###Subset data of interest:
data<-filter(df_cc, exp==c(params$exp))


###View Classifications & Set Factors:
data$book.name<-factor(data$book.name)
data$exp<-factor(data$exp)
data$entry<-factor(data$entry)
data$ped.id<-factor(data$ped.id)
data$code<-factor(data$code)
data$rng<-factor(data$rng)
data$pass<-factor(data$pass)
data$rep<-factor(data$rep)
data$plot<-factor(data$plot)
attach(data)

###Mean & IQRS:
max.yld <- quantile(data$yld,0.75, na.rm=TRUE) + (IQR(data$yld, na.rm=TRUE) * 1.5 )
min.yld <- quantile(data$yld,0.25, na.rm=TRUE) - (IQR(data$yld, na.rm=TRUE) * 1.5 )
avg.yld <- mean(data$yld, na.rm = TRUE)
```

# Data Visualization: {.tabset .tabset-fade}

## Summary

```{r summary, echo = FALSE, cols.print=10, rows.print=20, warning=FALSE}
sum.less<-data %>% select("exp", "book.name", "rep", "entry", "plot", "pass", "rng", "wt", "moist", "yld")
described<-describe(sum.less, IQR=TRUE)
paged_table(described, options(scipen=999, digits=3))
```

## Aggregation

```{r aggregation, echo = FALSE, rows.print=20, warning=FALSE}
options(digits=5)
aggdf <- data.frame(aggregate(yld~entry, data=data, function(x) c(length(x))),aggregate(yld~entry, data=data, function(x) c(min(x))),aggregate(yld~entry, data=data, function(x) c(mean(x))),aggregate(yld~entry, data=data, function(x) c(max(x))))
aggdf <- aggdf[,c(1,2,4,6,8)]
colnames(aggdf)<-c("Entry", "Count", "Min", "Mean", "Max")
paged_table(aggdf)
```

## Histograms

```{r histo.yld, echo = FALSE, fig.width=9}
histo<-hist(data$yld, breaks=seq(0,350, l=250), col="purple", main="Distribution of Yield", xlab="Yield")
abline(v = max.yld, col="red")
abline(v = avg.yld, col="red", lwd=c(3))
abline(v = min.yld, col="red")
```

## Barplots

``` {r bar.wt, echo = FALSE, fig.width=10, fig.height=7}
palette <- randomColor(length(unique(data$entry)))
data$color <- palette[as.factor(data$entry)]
# barplot(data$wt, names.arg=data$entry, ylim=c(0,40), main="Distribution of Weight", ylab="Weight", xlab="Entry", col=data$color)
# abline(h = max.wt, col="red")
# abline(h = avg.wt, col="red", lwd=c(3))
# abline(h = min.wt, col="red")
```

``` {r bar.yld, echo = FALSE, fig.width=10, fig.height=7}
barplot(data$yld, names.arg=data$entry, ylim=c(0,300), main="Distribution of Yield", ylab="Yield", xlab="Entry", col=data$color)
abline(h = max.yld, col="red")
abline(h = avg.yld, col="red", lwd=c(3))
abline(h = min.yld, col="red")
```

## Boxplot

``` {r boxplot, echo = FALSE, fig.width=9}
Boxplot(data$yld~data$entry,id=TRUE, main="2018 Yield Across Entries", xlab="entry", ylab="Yld")
abline(h = max.yld, col="red")
abline(h = avg.yld, col="red", lwd=c(3))
abline(h = min.yld, col="red")
```

# Mixed Model Analyses: {.tabset .tabset-fade}

## Model - Ryan's Suggestion 1

```{r model.ryan1, comment=NA, echo=FALSE, message=FALSE}
model.ryan1<-lmer(yld~entry + book.name + entry:book.name + (1|pass:book.name:rep) + (1|rng:book.name:rep) + (1|rep:book.name), data=data, REML=TRUE)
```

### ANOVA Ryan1

**YIELD = ENTRY + ENV + (ENTRY x ENV)**

* RANDOM = 
    + RANGE:ENV:REP
    + PASS:ENV:REP
    + REP:ENV

```{r ryan1.anova, comment=NA, echo=FALSE, message=FALSE}
options(scipen=7)
paged_table(anova(model.ryan1))
```


## Model - Ryan's Suggestion 2

```{r model.ryan2, comment=NA, echo=FALSE, message=FALSE}
model.ryan2<-lmer(yld~entry + book.name + entry:book.name + (1|pass:book.name:rep) + (1|rng:book.name:rep), data=data, REML=TRUE)
```

### ANOVA Ryan2

**YIELD = ENTRY + ENV + (ENTRY x ENV)**

* RANDOM = 
    + RANGE:ENV:REP
    + PASS:ENV:REP

```{r ryan2.anova, comment=NA, echo=FALSE, cols.print=9, message=FALSE}
options(scipen=7)
paged_table(anova(model.ryan2))
```


## Model - Jim's

```{r model.jim, comment=NA, echo=FALSE, message=FALSE}
model.jim<-lmer(yld~entry + book.name + rep:book.name + (1|pass:book.name:rep) + (1|rng:book.name:rep) + (1|entry:book.name), data=data, REML=TRUE)
```

### ANOVA Jim

**YIELD = ENTRY + ENV + (REP x ENV)**

* RANDOM = 
    + RANGE:ENV:REP
    + PASS:ENV:REP
    + ENTRY:ENV

```{r jim.anova, comment=NA, echo=FALSE, cols.print=7, message=FALSE}
options(scipen=7)
paged_table(anova(model.jim))
```



## Model - Alternative 1

```{r model.alt1, comment=NA, echo=FALSE, message=FALSE}
model.alt1<-lmer(yld~entry + book.name + entry:book.name + rep:book.name + (1|pass:book.name:rep) + (1|rng:book.name:rep), data=data, REML=TRUE)
```

### ANOVA Alt1

**YIELD = ENTRY + ENV + (ENTRY x ENV) + (REP x ENV)**

* RANDOM = 
    + RANGE:ENV:REP
    + PASS:ENV:REP

```{r alt1.anova, comment=NA, echo=FALSE, cols.print=7, message=FALSE}
options(scipen=7)
paged_table(anova(model.alt1))
```


## Model - Alternative 2

```{r model.alt2, comment=NA, echo=FALSE, message=FALSE}
model.alt2<-lmer(yld~entry + book.name + entry:book.name + rep:book.name + (1|rng:book.name:rep) + (1|pass:book.name:rep) + (1|entry:book.name), data=data, REML=TRUE)

```

### ANOVA Alt2

**YIELD = ENTRY + ENV + (ENTRY x ENV) + (REP x ENV)**

* RANDOM = 
    + RANGE:ENV:REP
    + PASS:ENV:REP
    + ENTRY:ENV

```{r alt2.anova, comment=NA, echo=FALSE, cols.print=7, message=FALSE}
options(scipen=6)
paged_table(anova(model.alt2))
```


## Model - Alternative 3

```{r model.alt3, comment=NA, echo=FALSE, message=FALSE}
model.alt3<-lmer(yld~entry + book.name + entry:book.name + rep:book.name + (1|rng:book.name:rep) + (1|pass:book.name:rep) + (1|rep:book.name), data=data, REML=TRUE)
```

### ANOVA Alt3

**YIELD = ENTRY + ENV + (ENTRY x ENV) + (REP x ENV)**

* RANDOM = 
    + RANGE:ENV:REP
    + PASS:ENV:REP
    + REP:ENV

```{r alt3.anova, comment=NA, echo=FALSE, col.prints=7, message=FALSE}
options(scipen=7)
paged_table(anova(model.alt3))
```



## **Mixed Model Comparisons**

```{r model.comp, comment=NA, echo=FALSE, message=FALSE}
paged_table(anova(model.ryan1, model.ryan2, model.jim, model.alt1, model.alt2, model.alt3, refit=FALSE))
```

## **CV Comparisons**

```{r model.cvcalc, comment=NA, echo=FALSE, message=FALSE}
jim<-LSDer::CVer(model.jim)
ry2<-LSDer::CVer(model.ryan2)
ry1<-LSDer::CVer(model.ryan1)
alt1<-LSDer::CVer(model.alt1)
alt2<-LSDer::CVer(model.alt2)
alt3<-LSDer::CVer(model.alt3)
model.cvs<-data.frame("Model"=c("Jim", "Ryan1", "Ryan2", "Alt1", "Alt2", "Alt3"), "CV" = c(jim, ry1, ry2, alt1, alt2, alt3))
paged_table(model.cvs)
```


# Linear Model Analyses: {.tabset .tabset-fade}

## Linear Model 1

```{r lmodel1, comment=NA, echo=FALSE, message=FALSE}
lmodel1<-lm(yld~entry, data=data)
```

### ANOVA Linear1

**YIELD = ENTRY**

```{r lmodel1.anova, comment=NA, echo=FALSE, cols.print=7, message=FALSE}
paged_table(anova(lmodel1))
```


## Linear Model 2

```{r lmodel2, comment=NA, echo=FALSE, message=FALSE}
lmodel2<-lm(yld~entry + book.name, data=data)
```

### ANOVA Linear2

**YIELD = ENTRY + ENV**

```{r lmodel2.anova, comment=NA, echo=FALSE, cols.print=7, message=FALSE}
paged_table(anova(lmodel2))
```


## Linear Model 3

```{r lmodel3, comment=NA, echo=FALSE, message=FALSE}
lmodel3<-lm(yld~entry + book.name + rep:book.name, data=data)
```

### ANOVA Linear 3

**YIELD = ENTRY + ENV + (REP x ENV)**

```{r lmodel3.anova, comment=NA, echo=FALSE, cols.print=7, message=FALSE}
paged_table(anova(lmodel3))
```


## Linear Model 4

```{r lmodel4, comment=NA, echo=FALSE, message=FALSE}
lmodel4<-lm(yld~entry + book.name + entry:book.name, data=data)
```

### ANOVA Linear4

**YIELD = ENTRY + ENV + (ENTRY x ENV)**

```{r lmodel4.anova, comment=NA, echo=FALSE, cols.print=7, message=FALSE}
paged_table(anova(lmodel4))
```


## Linear Model 5

```{r lmodel5, comment=NA, echo=FALSE, message=FALSE}
lmodel5<-lm(yld~entry + book.name + entry:book.name + rep:book.name, data=data)
```

### ANOVA Linear5

**YIELD = ENTRY + ENV + (ENTRY x ENV) + (REP x ENV)**

```{r lmodel5.anova, comment=NA, echo=FALSE, cols.print=7, message=FALSE}
paged_table(anova(lmodel5))
```


## **Linear Model Comparison**

```{r model.lbiccalc, comment=NA, echo=FALSE, message=FALSE}
options(digits=7)
bicl1<-BIC(lmodel1)
bicl2<-BIC(lmodel2)
bicl3<-BIC(lmodel3)
bicl4<-BIC(lmodel4)
bicl5<-BIC(lmodel5)
model.lcvs<-data.frame("Model"=c("Linear1", "Linear2", "Linear3", "Linear4", "Linear5"), "BIC" = as.factor(c(bicl1, bicl2, bicl3, bicl4, bicl5)))
paged_table(model.lcvs)
```


## **Linear CV Comparisons**

```{r model.lcvcalc, comment=NA, echo=FALSE, message=FALSE}
options(digits=3)
l1<-cv.model(lmodel1)
l2<-cv.model(lmodel2)
l3<-cv.model(lmodel3)
l4<-cv.model(lmodel4)
l5<-cv.model(lmodel5)
model.lcvs<-data.frame("Model"=c("Linear1", "Linear2", "Linear3", "Linear4", "Linear5"), "CV" = as.factor(c(l1, l2, l3, l4, l5)))
paged_table(model.lcvs)
```
