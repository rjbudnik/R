---
title: "**District Export**"
author: "Ryan Budnik"
date: '`r format(Sys.time(), "%d %B, %Y")`'
output: 
  html_document:
    theme: darkly
    toc: true
    toc_float:
      collapsed: true
params:
  data:
    label: "Input dataset:"
    value: 18CC.csv
    input: select
    choices: [18CC.csv]
  list:
    label: "Entry List:"
    value: CEL18.csv
    input: select
    choices: [CEL18.csv]
  storage:
    label: "Cold Storage:"
    value: CCS18.csv
    input: select
    choices: [CCS18.csv]
  exp:
    label: "Experiment:"
    value: C81A
    input: select
    choices: [C81A,C81B,C82A,C82B,C83A,C83B]
  book.name1:
    label: "Location 1:"
    value: CF811
    input: select
    choices: [CF811,CF821,CF831,NULL]
  book.name2:
    label: "Location 2:"
    value: CF812
    input: select
    choices: [CF812,CF822,CF832,NULL]
  book.name3:
    label: "Location 3:"
    value: CF813
    input: select
    choices: [CF813,CF823,CF833,NULL]
  book.name4:
    label: "Location 4:"
    value: CF814
    input: select
    choices: [CF814,CF824,CF834,NULL]
  book.name5:
    label: "Location 5:"
    value: CF815
    input: select
    choices: [CF815,CF825,CF835,NULL]
  year:
    label: "Year"
    value: 2018
    input: select
    choices: [2018, 2017, 2016]
  district:
    label: "District:"
    value: Northern
    input: select
    choices: [Northern, Central, Southern]
  season:
    label: "Season Length:"
    value: Early
    input: select
    choices: [Early, Full]
---

# Overview:
The following report renders a district-wide mixed model analysis with corresponding figures for the *`r params$year` `r params$district` District `r params$season`-season Test*, **`r params$exp`**.

```{r libs, include = FALSE}
library(rmarkdown)
library(knitr)
library(dplyr)
library(agricolae)
library(nlme)
library(lme4)
library(lmerTest)
library(randomcoloR)
library(car)
library(predictmeans)
library(shiny)
library(shinythemes)
library(psych)
library(MuMIn)
library(emmeans)
library(sjstats)
library(XLConnect)
```

## District Yields

```{r District, echo=FALSE, comments=NA}
district<-read.csv(c(params$data),header=T,na.strings=c("", " ", "NA"))
CCF<-8.067
PPB<-3.25

district<-filter(district, exp==c(params$exp))

district<-district%>%mutate(yld = (wt*CCF*(100-moist)/84.5))

district<-filter(district, exp==c(params$exp))
district$book.name<-factor(district$book.name)
district$exp<-factor(district$exp)
district$plot<-factor(district$plot)
district$rep<-factor(district$rep)
district$entry<-factor(district$entry)
district$pass<-factor(district$pass)
district$rng<-factor(district$rng)

model.district<-lmer(yld~entry + book.name + rep:book.name + (1|pass:book.name:rep) + (1|rng:book.name:rep) + (1|entry:book.name), data=district, REML=TRUE)
LSM.district<-as.data.frame(emmeans(model.district, spec="entry"))
LSM.district<-LSM.district%>%select(entry, emmean)
names(LSM.district)[2]<-c("yld")

model.moist<-lmer(moist~entry + book.name + rep:book.name + (1|pass:book.name:rep) + (1|rng:book.name:rep) + (1|entry:book.name), data=district, REML=TRUE)
LSM.moist<-as.data.frame(emmeans(model.moist, spec="entry"))
LSM.moist<-LSM.moist%>%select(emmean)
names(LSM.moist)[1]<-c("moist")
District<-cbind(LSM.district, LSM.moist)
District$yld<-as.numeric(District$yld)
District$moist<-as.numeric(District$moist)

District<-District%>%mutate(wetyield=((yld*84.5)/(100-moist)))
District<-District%>%mutate(moistureshrink=(1.183*(moist-15.5)))
District<-District%>%mutate(totalshrink=(moistureshrink+0.5))
District<-District%>%mutate(dryyield=(((100-totalshrink)/100)*wetyield))
District<-District%>%mutate(grossvalue=(dryyield*PPB))
District<-District%>%mutate(dryingcost=(wetyield*(moist-15.5)*.06))
District<-District%>%mutate(AGV=(grossvalue-dryingcost))
District<-District[,c(1,2,3,10)]
```

## Cold Storage and Entry List Combine

```{r Entry_List.and.Cold_Storage.Combine, echo = FALSE}
EL<-read.csv(c(params$list),header=T)
EL<-filter(EL, book.name==c(params$exp))
EL<-EL[!EL$private == "Yes", ]
EL<-EL%>%select("company", "hybrid", "pedid", "code", "entry")

CS<-read.csv(c(params$storage),header=T)
CS<-subset(CS, pedid %in% EL$pedid)
CS<-CS%>%select("pedid", "seedtrt", "traitpkg", "herbtech")

Combo<-left_join(EL,CS)

Combo$entry<-factor(Combo$entry)
Combo<-left_join(Combo,District)

Combo$yld.rank<-as.numeric(rank(-Combo$yld))

# Combo<-Combo[,c(1,2,6,7,8,9,10,11,12)]
# names(ls.all)[1:9]<-c("Exp","Loc","Company","Hybrid")

```

## Single Location Yields

``` {r Single.Location.Yields, echo=FALSE}
F1<-read.csv(c(params$data),header=T,na.strings=c("", " ", "NA"))
CCF<-8.067
F1<-F1%>%mutate(yld = (wt*CCF*(100-moist)/84.5))
F1.data<-filter(F1, book.name==c(params$book.name1) & exp==c(params$exp))
F1.data$book.name<-factor(F1.data$book.name)
F1.data$exp<-factor(F1.data$exp)
F1.data$entry<-factor(F1.data$entry)
F1.data$ped.id<-factor(F1.data$ped.id)
F1.data$code<-factor(F1.data$code)
F1.data$rng<-factor(F1.data$rng)
F1.data$pass<-factor(F1.data$pass)
F1.data$rep<-factor(F1.data$rep)

F2<-read.csv(c(params$data),header=T,na.strings=c("", " ", "NA"))
CCF<-8.067
F2<-F2%>%mutate(yld = (wt*CCF*(100-moist)/84.5))
F2.data<-filter(F2, book.name==c(params$book.name2) & exp==c(params$exp))
F2.data$book.name<-factor(F2.data$book.name)
F2.data$exp<-factor(F2.data$exp)
F2.data$entry<-factor(F2.data$entry)
F2.data$ped.id<-factor(F2.data$ped.id)
F2.data$code<-factor(F2.data$code)
F2.data$rng<-factor(F2.data$rng)
F2.data$pass<-factor(F2.data$pass)
F2.data$rep<-factor(F2.data$rep)

F3<-read.csv(c(params$data),header=T,na.strings=c("", " ", "NA"))
CCF<-8.067
F3<-F3%>%mutate(yld = (wt*CCF*(100-moist)/84.5))
F3.data<-filter(F1, book.name==c(params$book.name3) & exp==c(params$exp))
F3.data$book.name<-factor(F3.data$book.name)
F3.data$exp<-factor(F3.data$exp)
F3.data$entry<-factor(F3.data$entry)
F3.data$ped.id<-factor(F3.data$ped.id)
F3.data$code<-factor(F3.data$code)
F3.data$rng<-factor(F3.data$rng)
F3.data$pass<-factor(F3.data$pass)
F3.data$rep<-factor(F3.data$rep)

F4<-read.csv(c(params$data),header=T,na.strings=c("", " ", "NA"))
CCF<-8.067
F4<-F4%>%mutate(yld = (wt*CCF*(100-moist)/84.5))
F4.data<-filter(F4, book.name==c(params$book.name4) & exp==c(params$exp))
F4.data$book.name<-factor(F4.data$book.name)
F4.data$exp<-factor(F4.data$exp)
F4.data$entry<-factor(F4.data$entry)
F4.data$ped.id<-factor(F4.data$ped.id)
F4.data$code<-factor(F4.data$code)
F4.data$rng<-factor(F4.data$rng)
F4.data$pass<-factor(F4.data$pass)
F4.data$rep<-factor(F4.data$rep)

F5<-read.csv(c(params$data),header=T,na.strings=c("", " ", "NA"))
CCF<-8.067
F5<-F5%>%mutate(yld = (wt*CCF*(100-moist)/84.5))
F5.data<-filter(F5, book.name==c(params$book.name5) & exp==c(params$exp))
F5.data$book.name<-factor(F5.data$book.name)
F5.data$exp<-factor(F5.data$exp)
F5.data$entry<-factor(F5.data$entry)
F5.data$ped.id<-factor(F5.data$ped.id)
F5.data$code<-factor(F5.data$code)
F5.data$rng<-factor(F5.data$rng)
F5.data$pass<-factor(F5.data$pass)
F5.data$rep<-factor(F5.data$rep)

model1<-lmer(yld~entry + (1 | rep) + (1|rep:pass) + (1 | rep:rng), data=F1.data, REML=TRUE)
model2<-lmer(yld~entry + (1 | rep) + (1|rep:pass) + (1 | rep:rng), data=F2.data, REML=TRUE)
# model3<-lmer(yld~entry + (1 | rep) + (1|rep:pass) + (1 | rep:rng), data=F3.data, REML=TRUE)
model4<-lmer(yld~entry + (1 | rep) + (1|rep:pass) + (1 | rep:rng), data=F4.data, REML=TRUE)
model5<-lmer(yld~entry + (1 | rep) + (1|rep:pass) + (1 | rep:rng), data=F5.data, REML=TRUE)

LSM1<-as.data.frame(emmeans(model1, spec="entry"))
LSM1<-LSM1%>%select(entry, emmean)
names(LSM1)[2]<-c("F1")

LSM2<-as.data.frame(emmeans(model2, spec="entry"))
LSM2<-LSM2%>%select(emmean)
names(LSM2)[1]<-c("F2")

# LSM3<-as.data.frame(emmeans(model3, spec="entry"))
# LSM3<-LSM3%>%select(emmean)
# names(LSM3[1]<-c("F3")

LSM4<-as.data.frame(emmeans(model4, spec="entry"))
LSM4<-LSM4%>%select(emmean)
names(LSM4)[1]<-c("F4")

LSM5<-as.data.frame(emmeans(model5, spec="entry"))
LSM5<-LSM5%>%select(emmean)
names(LSM5)[1]<-c("F5")

LSMs<-cbind(LSM1,LSM2,LSM4,LSM5)

LSMs<-data.frame(append(LSMs, list(F3= ""), after =  3))

Combo<-left_join(Combo,LSMs)

Combo<-Combo[,c(1,2,7,8,9,12,10,11,13,14,15,16,17)]
Combo<-data.frame(append(Combo, list(NE_Yld= ""), after =  6))
Combo<-data.frame(append(Combo, list(NW_Yld= ""), after =  7))

Combo<-data.frame(append(Combo, list(Root_Ldg= ""), after =  9))
Combo<-data.frame(append(Combo, list(Stalk_Ldg= ""), after =  10))
```

## District Stats Table

```{r District.Stats.Table, echo=FALSE}
CV<-function(model){
  if(class(model)=="merMod"|class(model)=="merModLmerTest"|class(model)=="lmerMod"|class(model)=="lmerModLmerTest"){
   
    GM<-mean(model@frame[,1])
    MS<-sigma(model)**2
return(paste(round(100*sqrt(MS)/GM,3)))
  }
  else(stop("model not of class merMod or merModLmerTest"))
}

Combo.Mean<-mean(LSM.district$yld)
Combo.Min<-min(LSM.district$yld)
Combo.Max<-max(LSM.district$yld)
Combo.CV<-CV(model.district)
Combo.lsd<-predictmeans(model.district, "entry", pairwise=TRUE, level=0.25, pplot=FALSE, mplot=FALSE, newwd=FALSE)
Combo.LSD<-Combo.lsd[["LSD"]][["Aveg.LSD"]]

Moist.Mean<-mean(LSM.moist$moist)
Moist.Min<-min(LSM.moist$moist)
Moist.Max<-max(LSM.moist$moist)
Moist.CV<-cv(Combo$moist)*100

AGV.Mean<-mean(Combo$AGV)
AGV.Min<-min(Combo$AGV)
AGV.Max<-max(Combo$AGV)

F1.Mean<-mean(LSM1$F1)
F1.Min<-min(LSM1$F1)
F1.Max<-max(LSM1$F1)
F1.CV<-CV(model1)
F1.lsd<-predictmeans(model1, "entry", pairwise=TRUE, level=0.25, pplot=FALSE, mplot=FALSE, newwd=FALSE)
F1.LSD<-F1.lsd[["LSD"]][["Aveg.LSD"]]

F2.Mean<-mean(LSM2$F2)
F2.Min<-min(LSM2$F2)
F2.Max<-max(LSM2$F2)
F2.CV<-CV(model2)
F2.lsd<-predictmeans(model2, "entry", pairwise=TRUE, level=0.25, pplot=FALSE, mplot=FALSE, newwd=FALSE)
F2.LSD<-F2.lsd[["LSD"]][["Aveg.LSD"]]

# F3.Mean<-mean(LSM3$F3)
# F3.Min<-min(LSM3$F3)
# F3.Max<-max(LSM3$F3)
# F3.CV<-CV(model3)
# F3.lsd<-predictmeans(model3, "entry", pairwise=TRUE, level=0.25, pplot=FALSE, mplot=FALSE, newwd=FALSE)
# F3.LSD<-F3.lsd[["LSD"]][["Aveg.LSD"]]

F4.Mean<-mean(LSM4$F4)
F4.Min<-min(LSM4$F4)
F4.Max<-max(LSM4$F4)
F4.CV<-CV(model4)
F4.lsd<-predictmeans(model4, "entry", pairwise=TRUE, level=0.25, pplot=FALSE, mplot=FALSE, newwd=FALSE)
F4.LSD<-F4.lsd[["LSD"]][["Aveg.LSD"]]

F5.Mean<-mean(LSM5$F5)
F5.Min<-min(LSM5$F5)
F5.Max<-max(LSM5$F5)
F5.CV<-CV(model5)
F5.lsd<-predictmeans(model5, "entry", pairwise=TRUE, level=0.25, pplot=FALSE, mplot=FALSE, newwd=FALSE)
F5.LSD<-F5.lsd[["LSD"]][["Aveg.LSD"]]

Combo.Stats<- data.frame("Value" = c("Experiment Mean",	"Minimum Mean",	"Maximum Mean",	"LSD(0.25)", 	"Coefficient of Variability") ,"yldM" = as.numeric(c(Combo.Mean, Combo.Min, Combo.Max, Combo.LSD, Combo.CV)), "moistM" = as.numeric(c(Moist.Mean, Moist.Min, Moist.Max," ", Moist.CV)), "AGVM" = as.numeric(c(AGV.Mean, AGV.Min, AGV.Max, " ", " ")), "F1M" = as.numeric(c(F1.Mean, F1.Min, F1.Max, F1.LSD, F1.CV)), "F2M" = as.numeric(c(F2.Mean, F2.Min, F2.Max, F2.LSD, F2.CV)), "F4M" = as.numeric(c(F4.Mean, F4.Min, F4.Max, F4.LSD, F4.CV)), "F5M" = as.numeric(c(F5.Mean, F5.Min, F5.Max, F5.LSD, F5.CV)))

Combo.Stats$moistM<-as.numeric(Combo.Stats$moistM)
Combo.Stats$AGVM<-as.numeric(Combo.Stats$AGVM)

Combo.Stats%>%mutate_if(is.numeric, round, digits=2)

Combo.Stats<-data.frame(append(Combo.Stats, list(hybrid= ""), after =  1))
Combo.Stats<-data.frame(append(Combo.Stats, list(pkg= ""), after =  2))
Combo.Stats<-data.frame(append(Combo.Stats, list(herb= ""), after =  3))
Combo.Stats<-data.frame(append(Combo.Stats, list(dist.rank= ""), after =  5))
Combo.Stats<-data.frame(append(Combo.Stats, list(NW= ""), after =  6))
Combo.Stats<-data.frame(append(Combo.Stats, list(NE= ""), after =  7))
Combo.Stats<-data.frame(append(Combo.Stats, list(F3M= ""), after =  12))

Combo.Stats[is.na(Combo.Stats)] <- ""
Combo.Stats$moistM<-as.numeric(Combo.Stats$moistM)
Combo.Stats$AGVM<-as.numeric(Combo.Stats$AGVM)
```

## EXPORT!

```{r Export.to.Formatted.Excel,echo=FALSE}
wb<-loadWorkbook("District_Corn_Web.xlsx", create=FALSE)
setStyleAction(wb,XLC$"STYLE_ACTION.NONE")
writeWorksheet(wb, Combo, "C1A", startRow=5, startCol=1, header=FALSE)
writeWorksheet(wb, Combo.Stats, "C1A", startRow=50, startCol=1, header=FALSE)
saveWorkbook(wb)
```
